#     (history > 300) | (recency < 6) | (channel == "Multichannel"), 1, obs_rate_t
#   ),
#   random_number = runif(n= NROW(male_df))
# )%>%
#   filter(
#     (treatment == 0 & random_number < obs_rate_c) | (treatment == 1 & random_number < obs_rate_t)
#   )
head(biased_data)
#傾向スコアを利用したマッチング
m_near <- matchit(formula = treatment ~ recency + history + channel, data=biased_data, method = "nearest", replace=TRUE)
#マッチング後のデータを作成
matched_data <- match.data(m_near)
m_near
#マッチング後のデータを作成
matched_data <- match.data(m_near)
nrow(matched_data)
PSM_result
## マッチング後のデータで効果の推定
PSM_result <- matched_data %>% lm(spend ~ treatment, data = .) %>% tidy()
library("tidyverse")
## マッチング後のデータで効果の推定
PSM_result <- matched_data %>% lm(spend ~ treatment, data = .) %>% tidy()
# tidy関数を利用することで、各パラメータについて、
# 変数名、推定値、標準誤差、t値、p値といった値が入ったデータフレームを出力してくれる
library("broom")
# tidy関数を利用することで、各パラメータについて、
# 変数名、推定値、標準誤差、t値、p値といった値が入ったデータフレームを出力してくれる
library("broom")
## マッチング後のデータで効果の推定
PSM_result <- matched_data %>% lm(spend ~ treatment, data = .) %>% tidy()
PSM_result
summary(m_near)
#分析するデータのあるパッケージをインストール(初回)
install.packages("Ecdat")
#ライブラリの読み込み
library("Ecdat")
#%>%を使うためのライブラリ
library("dplyr")
library("tidyverse")
#Proposition99の分析：集計による分析
##データ準備
### Common Trend Assumptionのために分析から特定の州を外す
### タバコの税金が1988年以降50せんと以上上がった州のリスト
### Alaska, Hawaii, Maryland, Michigan, New Jersey, NewYork, Washington
skip_state <- c(3,9,10,22,21,23,31,33,48)
### Cigarデータセットの読み込み
### skip_stateに含まれる州のデータを削除
head(Cigar)
Cigar <- Cigar %>%
filter(!state %in% skip_state, year >= 70) %>% mutate(area = if_else(state == 5, "CA", "Rest of US"))
library(ggplot2)
Cigar_for_plot <- Cigar %>% mutate(year_segment = if_else(year < 88, 'before', 'after'))
Cigar_for_plot2 <- Cigar_for_plot %>%
group_by(area, year_segment) %>%
summarize(sales = sum(sales*pop16)/sum(pop16))
Cigar_for_plot2$year_segment <- factor(Cigar_for_plot2$year_segment, levels = c("before", "after"))
Colours2=c("white","gray80","black")
ggplot(Cigar_for_plot2, aes(x = year_segment, y = sales, group = area)) +
geom_line(aes(linetype = area)) +
geom_point(aes(shape = c(16,17)))
ylim(c(0,NA)) +
theme_bw() +
scale_fill_manual(values = Colours2)
Colours2=c("white","gray80","black")
ggplot(Cigar_for_plot2, aes(x = year_segment, y = sales, group = area)) +
geom_line(aes(linetype = area)) +
geom_point(aes(shape = c(16,17))) +
ylim(c(0,NA)) +
theme_bw() +
scale_fill_manual(values = Colours2)
ggplot(Cigar_for_plot2, aes(x = year_segment, y = sales, group = area)) +
geom_line(aes(linetype = area)) +
geom_point(aes(shape = c("A","B"))) +
ylim(c(0,NA)) +
theme_bw() +
scale_fill_manual(values = Colours2)
ggplot(Cigar_for_plot2, aes(x = year_segment, y = sales, group = area)) +
geom_line(aes(linetype = area)) +
geom_point(aes(shape = area)) +
ylim(c(0,NA)) +
theme_bw() +
scale_fill_manual(values = Colours2)
Cigar_did_sum <- Cigar %>%
mutate(post = if_else(year > 87, 1, 0),
ca = if_else(state == 5, 1, 0),
state = factor(state),
year_dummy = paste("D", year, sep = "_")) %>%
group_by(post, year, year_dummy, ca) %>%
summarize(sales = sum(sales*pop16)/sum(pop16))
Cigar_did_sum
Cigar_did_sum_seg <- Cigar_did_syn %>%
lm(data = ., sales ~ ca + post + ca:post + year_dummy) %>%
tidy() %>%
filter(!str_detect(term, "state"),
!str_detect(term, "year"))
Cigar_did_sum_seg <- Cigar_did_sum %>%
lm(data = ., sales ~ ca + post + ca:post + year_dummy) %>%
tidy() %>%
filter(!str_detect(term, "state"),
!str_detect(term, "year"))
library("Ecdat")
library("bloom")
install.packages("bloom")
library("bloom")
install.packages("broom")
install.packages("broom")
library("broom")
library("tidyverse")
library("broom")
Cigar_did_sum_seg <- Cigar_did_sum %>%
lm(data = ., sales ~ ca + post + ca:post + year_dummy) %>%
tidy() %>%
filter(!str_detect(term, "state"),
!str_detect(term, "year"))
Cigar_did_sum_seg <- Cigar_did_sum %>%
lm(data = ., sales ~ ca + post + ca:post + year_dummy) %>% tidy() %>%
filter(!str_detect(term, "state"),
!str_detect(term, "year"))
library("broom")
library("tidyverse")
Cigar_did_sum_seg <- Cigar_did_sum %>%
lm(data = ., sales ~ ca + post + ca:post + year_dummy) %>% tidy() %>%
filter(!str_detect(term, "state"),
!str_detect(term, "year"))
library("broom")
remove.packages("broom")
library("broom")
#分析するデータのあるパッケージをインストール(初回)
#install.packages("Ecdat")
install.packages("broom")
install.packages("broom")
library("broom")
Cigar_did_sum_seg <- Cigar_did_sum %>%
lm(data = ., sales ~ ca + post + ca:post + year_dummy) %>% tidy() %>%
filter(!str_detect(term, "state"),
!str_detect(term, "year"))
library("tidyverse")
Cigar_did_sum_seg <- Cigar_did_sum %>%
lm(data = ., sales ~ ca + post + ca:post + year_dummy) %>% tidy() %>%
filter(!str_detect(term, "state"),
!str_detect(term, "year"))
Cigar_did_sum_seg
Cigar_did_sum_seg
Cigar_did_sum_reg <- Cigar_did_sum %>%
lm(data = ., sales ~ ca + post + ca:post + year_dummy) %>% tidy() %>%
filter(!str_detect(term, "state"),
!str_detect(term, "year"))
Cigar_did_sum_reg
Cigar_did_sum_logreg <- Cigar_did_sum %>%
lm(data = ., log(sales) ~ ca + post + ca:post + year_dummy) %>% tidy() %>%
filter(!str_detect(term, "state"),
!str_detect(term, "year"))
Cigar_did_sum_logreg
Cigar_for_plot <- Cigar %>%
mutate(year_segment = if_else(year < 88, 'before', 'after')) %>%
group_by(area, year_segment) %>%
summarize(sales = sum(sales*pop16)/sum(pop16))
Cigar_for_plot2$year_segment <- factor(Cigar_for_plot2$year_segment, levels = c("before", "after"))
Colours2=c("white","gray80","black")
ggplot(Cigar_for_plot2, aes(x = year_segment, y = sales, group = area)) +
geom_line(aes(linetype = area)) +
geom_point(aes(shape = area)) +
ylim(c(0,NA)) +
theme_bw() +
scale_fill_manual(values = Colours2)
Cigar_for_plot2 %>%
group_by(area, year) %>%
summarize(sales = sum(sales*pop16)/sum(pop16)) %>%
ggplot(Cigar_for_plot2, aes(x = year, y = sales, group = area)) +
geom_line(aes(linetype = area)) +
geom_point(aes(shape = area)) +
ylim(c(0,NA)) +
theme_bw() +
scale_fill_manual(values = Colours2)
Cigar_for_plot2 %>%
group_by(area, year) %>%
summarize(sales = sum(sales*pop16)/sum(pop16)) %>%
ggplot(aes(x = year, y = sales, group = area)) +
geom_line(aes(linetype = area)) +
geom_point(aes(shape = area)) +
ylim(c(0,NA)) +
theme_bw() +
scale_fill_manual(values = Colours2)
Cigar %>%
group_by(area, year) %>%
summarize(sales = sum(sales*pop16)/sum(pop16)) %>%
ggplot(aes(x = year, y = sales, group = area)) +
geom_line(aes(linetype = area)) +
geom_point(aes(shape = area)) +
ylim(c(0,NA)) +
theme_bw() +
scale_fill_manual(values = Colours2)
Cigar %>%
group_by(area, year) %>%
summarize(sales = sum(sales*pop16)/sum(pop16)) %>%
ggplot(aes(x = year, y = sales, group = area)) +
geom_line(aes(linetype = area)) +
geom_point(aes(shape = area)) +
ylim(c(65,NA)) +
theme_bw() +
scale_fill_manual(values = Colours2)
Cigar %>%
group_by(area, year) %>%
summarize(sales = sum(sales*pop16)/sum(pop16)) %>%
ggplot(aes(x = year, y = sales, group = area)) +
geom_line(aes(linetype = area)) +
geom_point(aes(shape = area)) +
geom_vline(aes(xintercept=88), color="black", linetype="dashed")
ylim(c(65,NA)) +
theme_bw() +
scale_fill_manual(values = Colours2)
Cigar %>%
group_by(area, year) %>%
summarize(sales = sum(sales*pop16)/sum(pop16)) %>%
ggplot(aes(x = year, y = sales, group = area)) +
geom_line(aes(linetype = area)) +
geom_point(aes(shape = area)) +
geom_vline(aes(xintercept=88), linetype="dashed")
ylim(c(65,NA)) +
theme_bw() +
scale_fill_manual(values = Colours2)
Cigar %>%
group_by(area, year) %>%
summarize(sales = sum(sales*pop16)/sum(pop16)) %>%
ggplot(aes(x = year, y = sales, group = area)) +
geom_line(aes(linetype = area)) +
geom_point(aes(shape = area)) +
geom_vline(aes(xintercept=88), linetype="dashed")
ylim(c(65,NA)) +
theme_bw() +
scale_fill_manual(values = Colours2)
Cigar %>%
group_by(area, year) %>%
summarize(sales = sum(sales*pop16)/sum(pop16)) %>%
ggplot(aes(x = year, y = sales, group = area)) +
geom_line(aes(linetype = area)) +
geom_point(aes(shape = area)) +
geom_vline(aes(xintercept=88), colour="black", linetype="dashed")
ylim(c(65,NA)) +
theme_bw() +
scale_fill_manual(values = Colours2)
Cigar %>%
group_by(area, year) %>%
summarize(sales = sum(sales*pop16)/sum(pop16)) %>%
ggplot(aes(x = year, y = sales, group = area)) +
geom_line(aes(linetype = area)) +
geom_point(aes(shape = area)) +
geom_vline(aes(xintercept=88), colour="black", linetype="dashed") +
ylim(c(65,NA)) +
theme_bw() +
scale_fill_manual(values = Colours2)
install.packages("CausalImpact")
# CigarデータをCausal Impact用に整形
### 目的変数としてカリフォルニア州の売上だけ抜き出す
Y <- Cigar %>% filter(state == 5) %>% pull(sales)
X_sales <- Cigar %>%
filter(state != 5) %>%
select(state, sales, year) %>%
spread(state, sales)
X_sales <- Cigar %>%
filter(state != 5)
X_sales <- Cigar %>%
filter(state != 5) %>%
select(state, sales, year)
head(X_sales)
X_sales <- Cigar %>%
filter(state != 5) %>%
select(state, sales, year) %>%
spread(state, sales)
head(X_sales)
### 介入が行われるデータを示す
pre_period <- c(1:nrow(S_sales))[X_sales$year < 88]
post_period <- c(1:nrow(X_sales))X_sales$year >= 88]
### 介入が行われるデータを示す
pre_period <- c(1:nrow(X_sales))[X_sales$year < 88]
post_period <- c(1:nrow(X_sales))[X_sales$year >= 88]
### 目的変数と共変量をバインド
CI_date <- cbind(Y, X_sales) %>% select(-year)
impact <- CausalImpact::CausalImpact(
CI_data,
pre.period = c(min(pre_period), max(pre_period)),
post.period = c(min(post_period), max(post_period))
)
### 目的変数と共変量をバインド
CI_date <- cbind(Y, X_sales) %>% select(-year)
### 目的変数と共変量をバインド
CI_data <- cbind(Y, X_sales) %>% select(-year)
impact <- CausalImpact::CausalImpact(
CI_data,
pre.period = c(min(pre_period), max(pre_period)),
post.period = c(min(post_period), max(post_period))
)
## 結果のplot
plot(impact)
impact
impact
impact
impact
impact
impact
impact
knitr::opts_chunk$set(echo = TRUE)
matrix_1
matrix_1 <- matrix(
data = 1:10 #データ
nrow = 2 #２行にする
matrix_1 <- matrix(
data = 1:10, #データ
nrow = 2, #２行にする
byrow = TRUE #行(横)の順番で格納する
)
matrix_1
colnames(matrix_1) <- c("Col1", "Col2", "Col3", "Col4", "Col5")
colnames(matrix_1) <- c("Col1", "Col2", "Col3", "Col4", "Col5")
#行名と列名を格納
rownames(matrix_1) <- c("Row1", "Row2")
colnames(matrix_1) <- c("Col1", "Col2", "Col3", "Col4", "Col5")
matrix_1
matrix_1 <- matrix(
data = 1:10, #データ
nrow = 2, #２行にする
byrow = TRUE #行(横)の順番で格納する
)
matrix_1
#行名と列名を格納
rownames(matrix_1) <- c("Row1", "Row2")
colnames(matrix_1) <- c("Col1", "Col2", "Col3", "Col4", "Col5")
matrix_1
1:30
array_1 <- array(
data = 1:30, #データ
dim = c(3,5,2)
)
array_1
data_frame_1 <- data.frame(
col1 = c("A", "B", "C", "D", "E"),
col2 = c(1,2,3,4,5)
)
data_frame_1
list_1 <- list(
chara = ("A", "B", "C"),
list_1 <- list(
chara = c("A", "B", "C"),
matrix = matrix_1,
df = data_frame_1
)
list_1
list_1 <- list(
chara = c("A", "B", "C"),
matrix = matrix_1,
df = data_frame_1
)
list_1
set.seed(1)
test_frame_1 <- data.frame(rnorm(100, 5, 20))
test_frame_1
set.seed(1)
fish <- data.frame(rnorm(100, 30, 20))
rownames(test_frame_1) <- fish$length
kernel_density <- density(fish$length)
set.seed(1)
fish <- data.frame(rnorm(100, 30, 20))
rownames(length)
head(fish)
set.seed(1)
fish <- data.frame(rnorm(100, 30, 20))
rownames(fish) <- c("length")
colnames(fish) <- c("length")
fish <- data.frame(rnorm(100, 30, 20))
colnames(fish) <- c("length")
head(fish)
kernel_density <- density(fish$length)
plot(kernel_density)
fish <- data.frame(rnorm(100, 30, 10))
colnames(fish) <- c("length")
head(fish)
kernel_density <- density(fish$length)
plot(kernel_density)
#バンド幅をadjust倍に変更します
kernel_density_quarter <- density(fish$length, adjust = 0.25)
#バンド幅をadjust倍に変更します
kernel_density_quarter <- density(fish$length, adjust = 0.25)
kernel_density_quadruple <- density(fish$length, adjust = 4)
plot(kernel_density,
lwd = 2, #線の太さ
xlab = "", #x軸のラベル名称をなくす
ylim = c(0, 0.26), #y軸の範囲
main = " バンド幅を変える " #グラフのタイトル
)
lines(kernel_density_quarter, col = 2)
plot(kernel_density,
lwd = 2, #線の太さ
xlab = "", #x軸のラベル名称をなくす
ylim = c(0, 0.26), #y軸の範囲
main = " バンド幅を変える " #グラフのタイトル
)
lines(kernel_density_quarter, col = 2)
lines(kernel_density_quadruple, col = 4)
data {
int N;
vector[N] sales;
}
set.seed(0)
sales <- rnorm(100,100,20)
sales
dile_beer_sales_1<- data.frame(sales, names = c("sales"))
file_beer_sales_1<- data.frame(sales, names = c("sales"))
file_beer_sales_1
sales <- rnorm(100,100,20)
sales <- rnorm(100,100,20)
file_beer_sales_1<- data.frame(sales)
colnames(file_beer_sales_1) <- c("sales")
file_beer_sales_1
# list形式でまとめる
sample_size <- nrow(file_beer_sales_1)
data_list <- list(sales = file_beer_sales_1$sales, N = sample_size
data_list <- list(sales = file_beer_sales_1$sales, N = sample_size
)
data_list <- list(sales = file_beer_sales_1$sales, N = sample_size)
data_list
#read package
library(rstan)
#計算の高速化
rstan_options(auto_write = TRUE) #拡張子が.rdsであるRDSファイルが生成される
options(mc.cores = parallel::detectCores()) #計算を並列化するので実行速度が上がる
set.seed(0)
# サンプルデータ作成
sales <- rnorm(100,100,20)
file_beer_sales_1<- data.frame(sales)
colnames(file_beer_sales_1) <- c("sales")
# list形式でまとめる
sample_size <- nrow(file_beer_sales_1)
data_list <- list(sales = file_beer_sales_1$sales, N = sample_size)
mcmc_result <- stan(
file = "stan_section4.stan",
data = data_list,
seed = 1,
chains = 4, #チェーン数
iter = 2000, #乱数生成の繰り返し数
warmup = 1000, #バーンイン期間
thin = 1 #間引き数(1なら間引きなし)
)
mcmc_result <- stan(
file = "stan_section4.stan",
data = data_list,
seed = 1,
chains = 4, #チェーン数
iter = 2000, #乱数生成の繰り返し数
warmup = 1000, #バーンイン期間
thin = 1 #間引き数(1なら間引きなし)
)
getwd()
setwd(/Users/naho/git/R/R_stan_bayes_statistics)
mcmc_result <- stan(
file = "stan_section4.stan",
data = data_list,
seed = 1,
chains = 4, #チェーン数
iter = 2000, #乱数生成の繰り返し数
warmup = 1000, #バーンイン期間
thin = 1 #間引き数(1なら間引きなし)
)
setwd(/Users/naho/git/R/R_stan_bayes_statistics)
setwd("/Users/naho/git/R/R_stan_bayes_statistics")
mcmc_result <- stan(
file = "stan_section4.stan",
data = data_list,
seed = 1,
chains = 4, #チェーン数
iter = 2000, #乱数生成の繰り返し数
warmup = 1000, #バーンイン期間
thin = 1 #間引き数(1なら間引きなし)
)
setwd("/Users/naho/git/R/R_stan_bayes_statistics")
mcmc_result <- stan(
file = "stan_section4.stan",
data = data_list,
seed = 1,
chains = 4, #チェーン数
iter = 2000, #乱数生成の繰り返し数
warmup = 1000, #バーンイン期間
thin = 1 #間引き数(1なら間引きなし)
)
install.packages("Rcpp", repos = "https://rcppcore.github.io/drat")
install.packages("Rcpp", repos = "https://rcppcore.github.io/drat")
install.packages("Rcpp", repos = "https://rcppcore.github.io/drat")
install.packages("Rcpp", repos = "https://rcppcore.github.io/drat")
install.packages("Rcpp", repos = "https://rcppcore.github.io/drat")
install.packages("Rcpp", repos = "https://rcppcore.github.io/drat")
install.packages("Rcpp", repos = "https://rcppcore.github.io/drat")
setwd("/Users/naho/git/R/R_stan_bayes_statistics")
mcmc_result <- stan(
file = "stan_section4.stan",
data = data_list,
seed = 1,
chains = 4, #チェーン数
iter = 2000, #乱数生成の繰り返し数
warmup = 1000, #バーンイン期間
thin = 1 #間引き数(1なら間引きなし)
)
dotR <- file.path(Sys.getenv("HOME"), ".R")
if (!file.exists(dotR)) dir.create(dotR)
M <- file.path(dotR, "Makevars")
if (!file.exists(M)) file.create(M)
cat("\nCXX14FLAGS += -O3 -mtune=native -arch x86_64 -ftemplate-depth-256",
file = M, sep = "\n", append = FALSE)
remove.packages("rstan")
if (file.exists(".RData")) file.remove(".RData")
install.packages("rstan", type = "source")
install.packages("rstan", type = "source")
# list形式でまとめる
sample_size <- nrow(file_beer_sales_1)
